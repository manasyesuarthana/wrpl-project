<%- include("../partials/header.ejs") %>

<div class="container mt-4 mb-5">
    <main>
        <div class="py-5 text-center">
            <div class="d-flex justify-content-start mb-3">
                <a href="javascript:history.back()" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back
                </a>
            </div>
            <h2>Add Your Job Info Here</h2>
            <p class="lead">Fill out the details below to add a new job application to your JobTrek dashboard.</p>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-10 col-lg-8">
                <h4 class="mb-3">Job Details</h4>

                <form class="needs-validation" id="addJobForm" action="/submit-job-application" method="POST" novalidate>
                    <div class="row g-3">
                        <div class="col-12">
                            <label for="companyName" class="form-label">Company Name</label>
                            <input type="text" class="form-control <%= (typeof errors !== 'undefined' && errors.companyName) ? 'is-invalid' : (typeof formData !== 'undefined' && formData.companyName ? 'is-valid' : '') %>" 
                                   id="companyName" name="companyName" placeholder="e.g., Google, Microsoft" required
                                   value="<%= typeof formData !== 'undefined' ? formData.companyName : '' %>">
                            <div class="invalid-feedback">
                                <%= (typeof errors !== 'undefined' && errors.companyName) ? errors.companyName : 'Company name is required.' %>
                            </div>
                        </div>

                        <div class="col-12">
                            <label for="appliedPosition" class="form-label">Applied Position</label>
                            <input type="text" class="form-control <%= (typeof errors !== 'undefined' && errors.appliedPosition) ? 'is-invalid' : (typeof formData !== 'undefined' && formData.appliedPosition ? 'is-valid' : '') %>" 
                                   id="appliedPosition" name="appliedPosition" placeholder="e.g., Software Engineer, Product Manager" required
                                   value="<%= typeof formData !== 'undefined' ? formData.appliedPosition : '' %>">
                            <div class="invalid-feedback">
                                <%= (typeof errors !== 'undefined' && errors.appliedPosition) ? errors.appliedPosition : 'Applied position is required.' %>
                            </div>
                        </div>

                        <div class="col-12">
                            <label for="companyAddress" class="form-label">Company Address <span class="text-muted">(Optional)</span></label>
                            <input type="text" class="form-control" id="companyAddress" name="companyAddress" placeholder="123 Main St, City, State"
                                   value="<%= typeof formData !== 'undefined' ? formData.companyAddress : '' %>">
                        </div>

                        <div class="col-12">
                            <label for="dateApplied" class="form-label">Date of Application</label>
                            <input type="date" class="form-control <%= (typeof errors !== 'undefined' && errors.dateApplied) ? 'is-invalid' : (typeof formData !== 'undefined' && formData.dateApplied ? 'is-valid' : '') %>" 
                                   id="dateApplied" name="dateApplied" required
                                   value="<%= typeof formData !== 'undefined' ? formData.dateApplied : '' %>">
                            <div class="invalid-feedback">
                                <%= (typeof errors !== 'undefined' && errors.dateApplied) ? errors.dateApplied : 'Date of application is required.' %>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label for="country" class="form-label">Country</label>
                            <select class="form-select <%= (typeof errors !== 'undefined' && errors.country) ? 'is-invalid' : (typeof formData !== 'undefined' && formData.country ? 'is-valid' : '') %>" 
                                    id="country" name="country" required>
                                <option value="">Select a country...</option>
                                </select>
                            <div class="invalid-feedback">
                                <%= (typeof errors !== 'undefined' && errors.country) ? errors.country : 'Please select a valid country.' %>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label for="status" class="form-label">Status</label>
                            <select class="form-select <%= (typeof errors !== 'undefined' && errors.status) ? 'is-invalid' : (typeof formData !== 'undefined' && formData.status ? 'is-valid' : '') %>" 
                                    id="status" name="status" required>
                                <option value="">Choose status...</option>
                                </select>
                            <div class="invalid-feedback">
                                <%= (typeof errors !== 'undefined' && errors.status) ? errors.status : 'Status is required.' %>
                            </div>
                        </div>
                        
                        <div class="col-12">
                            <label for="companyWebsite" class="form-label">Company's Website / Application Portal <span class="text-muted">(Optional)</span></label>
                            <input type="url" class="form-control" id="companyWebsite" name="companyWebsite" placeholder="https://www.company.com/careers"
                                   value="<%= typeof formData !== 'undefined' ? formData.companyWebsite : '' %>">
                        </div>

                        <div class="col-12 mt-3">
                            <label for="additionalNotes" class="form-label">Additional Notes <span class="text-muted">(Optional)</span></label>
                            <textarea class="form-control" id="additionalNotes" name="additionalNotes" placeholder="Enter any additional information..." rows="4"><%= typeof formData !== 'undefined' ? formData.additional_notes : '' %></textarea>
                        </div>
                    </div>

                    <hr class="my-4">
                    
                    <% if (typeof errors !== 'undefined' && errors.form) { %>
                        <div class="alert alert-danger" role="alert">
                            <%= errors.form %>
                        </div>
                    <% } %>
                     <% if (typeof successMessage !== 'undefined' && successMessage) { %>
                        <div class="alert alert-success" role="alert">
                            <%= successMessage %>
                        </div>
                    <% } %>


                    <button class="w-100 btn btn-primary btn-lg mt-3 mb-5" type="submit">Add Job Application</button>
                </form>
            </div>
        </div>
    </main>
</div>

<%- include("../partials/footer.ejs") %>

<script>
    // Standard Bootstrap form validation script (optional if you rely on server-side or built-in browser validation)
    // This script enables Bootstrap's custom styling for validation states.
    (() => {
        'use strict'
        const forms = document.querySelectorAll('.needs-validation')
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                // We are letting the server handle validation primarily with direct POST
                // but Bootstrap styling can still be triggered if form.checkValidity() is false
                if (!form.checkValidity()) {
                    // event.preventDefault() // Don't prevent default if you want it to submit for server-side handling
                    // event.stopPropagation()
                }
                form.classList.add('was-validated')
            }, false)
        })
    })();

    document.addEventListener('DOMContentLoaded', () => {
        const countrySelect = document.getElementById('country');
        const statusSelect = document.getElementById('status');

        // --- Populate Country Dropdown ---
        // 'countries' is passed from the server via res.render() in router.js
        const countriesData = <%- JSON.stringify(typeof countries !== 'undefined' ? countries : []) %>;
        const selectedCountry = "<%- typeof formData !== 'undefined' ? formData.country : '' %>";

        if (countrySelect && countriesData.length > 0) {
            countriesData.forEach(country => {
                const option = document.createElement('option');
                option.value = country.country_id;
                option.textContent = country.country_name;
                if (String(country.country_id) === selectedCountry) {
                    option.selected = true;
                }
                countrySelect.appendChild(option);
            });
        }

        // --- Populate Status Dropdown ---
        // 'statuses' is passed from the server (enum array)
        const applicationStatusesData = <%- JSON.stringify(typeof statuses !== 'undefined' ? statuses : []) %>;
        const selectedStatus = "<%- typeof formData !== 'undefined' ? formData.status : '' %>";

        if (statusSelect && applicationStatusesData.length > 0) {
            applicationStatusesData.forEach((statusName, index) => {
                const option = document.createElement('option');
                option.value = index; 
                option.textContent = statusName;
                if (String(index) === selectedStatus) {
                    option.selected = true;
                }
                statusSelect.appendChild(option);
            });
        }

        // No fetch-based submission logic needed here anymore for this approach
        // The form will submit via its action and method attributes.
    });
</script>