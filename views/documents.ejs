<%- include("partials/header.ejs") %>
<%
// Test data array (from your provided code)
const documents = [
  { id: 1, name: "JohnDoe_Resume.pdf", type: "Resume", uploaded: "May 12, 2023", size: "2.4 MB" },
  { id: 2, name: "CoverLetter.docx", type: "Cover Letter", uploaded: "May 5, 2023", size: "1.1 MB" },
  { id: 3, name: "ProjectPortfolio.pdf", type: "Portfolio", uploaded: "April 28, 2023", size: "5.7 MB" },
  { id: 4, name: "References.txt", type: "References", uploaded: "April 15, 2023", size: "0.3 MB" },
  { id: 5, name: "Certification.pdf", type: "Certification", uploaded: "June 1, 2023", size: "1.8 MB" },
  { id: 6, name: "WorkSample.docx", type: "Work Sample", uploaded: "June 5, 2023", size: "3.2 MB" },
  { id: 7, name: "Transcript.pdf", type: "Education", uploaded: "June 10, 2023", size: "4.5 MB" }
];

// Function to get icon based on file extension (from your provided code)
function getFileIcon(filename) {
  const extension = filename.split('.').pop().toLowerCase();
  switch(extension) {
    case 'pdf': return '<i class="bi bi-file-earmark-pdf text-danger me-2"></i>';
    case 'docx': case 'doc': return '<i class="bi bi-file-earmark-word text-primary me-2"></i>';
    case 'txt': return '<i class="bi bi-file-earmark-text me-2"></i>';
    default: return '<i class="bi bi-file-earmark me-2"></i>';
  }
}

// Pagination and search logic (from your provided code)
const itemsPerPage = 5;
let currentPage = typeof page !== 'undefined' ? parseInt(page) : 1;
const searchQuery = typeof query !== 'undefined' ? query.toLowerCase() : '';

const filteredDocuments = documents.filter(doc => {
  if (!searchQuery) return true;
  return (
    doc.name.toLowerCase().includes(searchQuery) ||
    doc.type.toLowerCase().includes(searchQuery) ||
    doc.uploaded.toLowerCase().includes(searchQuery)
  )
});

const totalPages = Math.ceil(filteredDocuments.length / itemsPerPage);
const startIndex = (currentPage - 1) * itemsPerPage;
const endIndex = startIndex + itemsPerPage;
const currentDocuments = filteredDocuments.slice(startIndex, endIndex);
%>

<div class="d-flex flex-column flex-md-row">
  <div id="sidebar" class="d-flex flex-row flex-md-column flex-shrink-0 p-3 text-bg-dark w-100 w-md-auto">
    <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none">
      <img src="/asset/JobTrek_Logo_No_Title.svg" alt="JobTrek Logo" style="height: 40px;" class="me-2">
      <span class="fs-4">JobTrek</span>
    </a>
    <hr class="d-none d-md-block">
    <ul class="nav nav-pills flex-row flex-md-column mb-auto w-100 justify-content-around justify-content-md-start">
      <li class="nav-item">
        <a href="/" class="nav-link text-white"> 
          <i class="bi bi-house-door me-2"></i> Home
        </a>
      </li>
      <li>
        <a href="/reminders" class="nav-link text-white">
          <i class="bi bi-bell me-2"></i> Reminders
        </a>
      </li>
      <li>
        <a href="/contacts" class="nav-link text-white">
          <i class="bi bi-people me-2"></i> Contacts
        </a>
      </li>
      <li>
        <a href="/documents" class="nav-link active" aria-current="page"> <i class="bi bi-folder me-2"></i> Documents
        </a>
      </li>
    </ul>
    <hr class="d-none d-md-block">
    <div class="sidebar-footer mt-auto pt-3"> 
        <button type="button" class="btn btn-danger w-100" data-bs-toggle="modal" data-bs-target="#signOutModalDocPage">
            <i class="bi bi-box-arrow-right me-2"></i>Sign Out
        </button>
    </div>
  </div>
  <div class="modal fade" id="signOutModalDocPage" tabindex="-1" aria-labelledby="signOutModalDocPageLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content text-bg-dark">
        <div class="modal-header">
          <h5 class="modal-title" id="signOutModalDocPageLabel">Confirm Sign Out</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Are you sure you want to sign out?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" id="confirmSignOutButtonDocPage" class="btn btn-danger">Sign Out</button>
        </div>
      </div>
    </div>
  </div>

  <div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2 class="text-white"><i class="bi bi-folder me-2"></i>My Documents</h2>
      <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#uploadModal">
        <i class="bi bi-upload me-2"></i>Upload Document
      </button>
    </div>

    <div class="row mb-4">
      <div class="col-md-6">
        <form action="/documents" method="GET">
          <div class="input-group">
            <input
              type="text"
              class="form-control"
              placeholder="Search documents..."
              name="query"
              value="<%= typeof query !== 'undefined' ? query : '' %>">
            <button class="btn btn-outline-secondary" type="submit">
              <i class="bi bi-search"></i>
            </button>
          </div>
        </form>
      </div>
    </div>

    <div class="card">
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th scope="col">Name</th>
                <th scope="col">Type</th>
                <th scope="col">Uploaded</th>
                <th scope="col">Size</th>
                <th scope="col">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (currentDocuments.length === 0) { %>
                <tr>
                  <td colspan="5" class="text-center">No documents found</td>
                </tr>
              <% } else { %>
                <% currentDocuments.forEach(document => { %>
                  <tr>
                    <td>
                      <%- getFileIcon(document.name) %>
                      <%= document.name %>
                    </td>
                    <td><%= document.type %></td>
                    <td><%= document.uploaded %></td>
                    <td><%= document.size %></td>
                    <td>
                      <button class="btn btn-sm btn-outline-primary me-2" title="Download">
                        <i class="bi bi-download"></i>
                      </button>
                      <button class="btn btn-sm btn-outline-danger delete-document-btn"
                              title="Delete"
                              data-bs-toggle="modal"
                              data-bs-target="#deleteDocumentModal"
                              data-document-id="<%= document.id %>"
                              data-document-name="<%= document.name %>">
                        <i class="bi bi-trash"></i>
                      </button>
                    </td>
                  </tr>
                <% }); %>
              <% } %>
            </tbody>
          </table>
        </div>

        <% if (filteredDocuments.length > itemsPerPage) { %>
          <nav aria-label="Document pagination">
            <ul class="pagination justify-content-center mt-4">
              <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                <a class="page-link" href="/documents?query=<%= searchQuery %>&page=<%= currentPage - 1 %>" tabindex="-1">
                  <i class="bi bi-chevron-left"></i>
                </a>
              </li>
              <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                  <a class="page-link" href="/documents?query=<%= searchQuery %>&page=<%= i %>"><%= i %></a>
                </li>
              <% } %>
              <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="/documents?query=<%= searchQuery %>&page=<%= currentPage + 1 %>">
                  <i class="bi bi-chevron-right"></i>
                </a>
              </li>
            </ul>
          </nav>
        <% } %>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="uploadModalLabel"><i class="bi bi-upload me-2"></i>Upload New Document</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form>
          <div class="mb-3">
            <label for="documentFile" class="form-label"><i class="bi bi-file-earmark me-2"></i>Select File</label>
            <input class="form-control" type="file" id="documentFile">
          </div>
          <div class="mb-3">
            <label for="documentType" class="form-label"><i class="bi bi-tag me-2"></i>Document Type</label>
            <select class="form-select" id="documentType">
              <option selected>Choose type...</option>
              <option>Resume</option>
              <option>Cover Letter</option>
              <option>Portfolio</option>
              <option>References</option>
              <option>Other</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="documentDescription" class="form-label"><i class="bi bi-text-paragraph me-2"></i>Description (Optional)</label>
            <textarea class="form-control" id="documentDescription" rows="2"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          <i class="bi bi-x-circle me-1"></i>
          Cancel
        </button>
        <button type="button" class="btn btn-primary">
          <i class="bi bi-upload me-1"></i>
          Upload
        </button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="deleteDocumentModal" tabindex="-1" aria-labelledby="deleteDocumentModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteDocumentModalLabel">Confirm Deletion</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="deleteDocumentModalBodyContent">
        Are you sure you want to delete this document?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteDocumentButton">Delete Document</button>
      </div>
    </div>
  </div>
</div>

<%- include("partials/footer.ejs") %>

<script>
    let clientPageDocuments = <%- JSON.stringify(currentDocuments) %>;

    function getClientFileIcon(filename) {
        if (!filename) return '<i class="bi bi-file-earmark me-2"></i>'; 
        const extension = filename.split('.').pop().toLowerCase();
        switch(extension) {
            case 'pdf':  return '<i class="bi bi-file-earmark-pdf text-danger me-2"></i>';
            case 'docx': case 'doc': return '<i class="bi bi-file-earmark-word text-primary me-2"></i>';
            case 'txt':  return '<i class="bi bi-file-earmark-text me-2"></i>';
            default:     return '<i class="bi bi-file-earmark me-2"></i>';
        }
    }

    let documentIdToDelete = null;
    let documentNameToDelete = null;

    document.addEventListener('DOMContentLoaded', () => {
        const deleteDocumentModalElement = document.getElementById('deleteDocumentModal');
        const confirmDeleteDocumentButton = document.getElementById('confirmDeleteDocumentButton');
        // ADDED: Sign Out Button from this page's modal
        const confirmSignOutBtnDocPage = document.getElementById('confirmSignOutButtonDocPage');

        if (deleteDocumentModalElement) {
            deleteDocumentModalElement.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget; 
                if (button) {
                    documentIdToDelete = button.getAttribute('data-document-id');
                    documentNameToDelete = button.getAttribute('data-document-name');
                }
                const modalBody = deleteDocumentModalElement.querySelector('#deleteDocumentModalBodyContent');
                if (modalBody) {
                    modalBody.textContent = `Are you sure you want to delete the document: "${documentNameToDelete || 'this item'}"?`;
                }
            });

            // ADDED: Fix for backdrop not disappearing after document deletion
            deleteDocumentModalElement.addEventListener('hidden.bs.modal', function () {
                const backdrops = document.querySelectorAll('.modal-backdrop');
                backdrops.forEach(backdrop => backdrop.remove());
                document.body.classList.remove('modal-open');
                document.body.style.overflow = '';
                document.body.style.paddingRight = '';
            });
        }

        if (confirmDeleteDocumentButton) {
            confirmDeleteDocumentButton.addEventListener('click', performSimpleDocumentDelete);
        }

        // ADDED: Sign Out Logic
        if (confirmSignOutBtnDocPage) {
            confirmSignOutBtnDocPage.addEventListener('click', async () => {
                try {
                    const response = await fetch('/api/v1/logout', {
                        method: 'DELETE',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    const result = await response.json(); 
                    if (response.ok && result.success) { // Check for result.success from controller
                        window.location.href = '/login';
                    } else {
                        alert('Logout failed: ' + (result.message || 'Server error')); 
                    }
                } catch (error) {
                    console.error('Sign out error:', error);
                    alert('An error occurred during logout. Please try again.');
                }
            });
        }
    });

    function performSimpleDocumentDelete() {
        // ... (Your existing temporary delete logic) ...
        if (!documentIdToDelete) {
            console.warn("Document ID to delete is not set.");
            return;
        }
        const idNum = parseInt(documentIdToDelete);
        const index = clientPageDocuments.findIndex(doc => doc.id === idNum);
        if (index > -1) {
            clientPageDocuments.splice(index, 1); 
            renderSimpleDocumentTable(clientPageDocuments); 
        } else {
            console.warn("Document with ID:", documentIdToDelete, "not found in clientPageDocuments for deletion.");
        }
        const modal = bootstrap.Modal.getInstance(document.getElementById('deleteDocumentModal'));
        if (modal) {
            modal.hide();
        }
        documentIdToDelete = null;
        documentNameToDelete = null;
    }

    function renderSimpleDocumentTable(docs) {
        // ... (Your existing temporary render logic) ...
        const tbody = document.querySelector(".table-responsive table tbody");
        if (!tbody) {
            console.error("Document table tbody not found! Cannot re-render.");
            return;
        }
        tbody.innerHTML = ""; 
        if (docs.length === 0) {
            tbody.innerHTML = '<tr><td colspan="5" class="text-center">No documents to display.</td></tr>';
            return;
        }
        docs.forEach(doc => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>
                    ${getClientFileIcon(doc.name)}
                    ${doc.name}
                </td>
                <td>${doc.type}</td>
                <td>${doc.uploaded}</td>
                <td>${doc.size}</td>
                <td>
                    <button class="btn btn-sm btn-outline-primary me-2" title="Download">
                        <i class="bi bi-download"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-danger delete-document-btn"
                            title="Delete"
                            data-bs-toggle="modal"
                            data-bs-target="#deleteDocumentModal"
                            data-document-id="${doc.id}"
                            data-document-name="${doc.name}">
                        <i class="bi bi-trash"></i>
                    </button>
                </td>
            `;
            tbody.appendChild(row);
        });
    }
</script>

<%- include("partials/footer.ejs") %>